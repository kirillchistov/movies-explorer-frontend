{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";//  API для получения фильмов с сервера Я  //\n//  Проверка ответа сервера, получение коллекции фильмов  //\nimport{MOVIESURL}from'./constants.js';var MoviesApi=/*#__PURE__*/function(){function MoviesApi(options){_classCallCheck(this,MoviesApi);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(MoviesApi,[{key:\"_checkResponse\",value:function(){var _checkResponse2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(res){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(res.ok){_context.next=6;break;}_context.t0=Promise;_context.next=4;return res.json();case 4:_context.t1=_context.sent;return _context.abrupt(\"return\",_context.t0.reject.call(_context.t0,_context.t1));case 6:return _context.abrupt(\"return\",res.json());case 7:case\"end\":return _context.stop();}}},_callee);}));function _checkResponse(_x){return _checkResponse2.apply(this,arguments);}return _checkResponse;}()// Загрузка карточек фильмов\n},{key:\"getAllMovies\",value:function getAllMovies(){return fetch(\"\".concat(this._baseUrl),{method:'GET',headers:this._headers}).then(this._checkResponse);}}]);return MoviesApi;}();var API_CONFIG={baseUrl:MOVIESURL,credentials:'include',headers:{'Accept':'application/json','Content-Type':'application/json'}};var moviesApi=new MoviesApi(API_CONFIG);export default moviesApi;","map":{"version":3,"names":["MOVIESURL","MoviesApi","options","_baseUrl","baseUrl","_headers","headers","res","ok","Promise","json","reject","fetch","method","then","_checkResponse","API_CONFIG","credentials","moviesApi"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/utils/MoviesApi.js"],"sourcesContent":["//  API для получения фильмов с сервера Я  //\n//  Проверка ответа сервера, получение коллекции фильмов  //\n\nimport { MOVIESURL } from './constants.js';\n\nclass MoviesApi {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  async _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(await res.json());\n    }\n    return res.json();\n  }\n\n  // Загрузка карточек фильмов\n  getAllMovies() {\n    return fetch(`${this._baseUrl}`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n}\nconst API_CONFIG = {\n  baseUrl: MOVIESURL,\n  credentials: 'include',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n};\n\nconst moviesApi = new MoviesApi(API_CONFIG);\n\nexport default moviesApi;\n"],"mappings":"8jBAAA;AACA;AAEA,OAASA,SAAS,KAAQ,gBAAgB,CAAC,GAErCC,UAAS,yBACb,mBAAYC,OAAO,CAAE,iCACnB,IAAI,CAACC,QAAQ,CAAGD,OAAO,CAACE,OAAO,CAC/B,IAAI,CAACC,QAAQ,CAAGH,OAAO,CAACI,OAAO,CACjC,CAAC,6IAED,iBAAqBC,GAAG,uHACjBA,GAAG,CAACC,EAAE,qCACFC,OAAO,uBAAcF,IAAG,CAACG,IAAI,EAAE,8EAAvBC,MAAM,uEAEhBJ,GAAG,CAACG,IAAI,EAAE,wDAClB,sGAED;AAAA,4BACA,uBAAe,CACb,MAAOE,MAAK,WAAI,IAAI,CAACT,QAAQ,EAAI,CAC/BU,MAAM,CAAE,KAAK,CACbP,OAAO,CAAE,IAAI,CAACD,QAChB,CAAC,CAAC,CAACS,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAC9B,CAAC,yBAGH,GAAMC,WAAU,CAAG,CACjBZ,OAAO,CAAEJ,SAAS,CAClBiB,WAAW,CAAE,SAAS,CACtBX,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,GAAMY,UAAS,CAAG,GAAIjB,UAAS,CAACe,UAAU,CAAC,CAE3C,cAAeE,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}