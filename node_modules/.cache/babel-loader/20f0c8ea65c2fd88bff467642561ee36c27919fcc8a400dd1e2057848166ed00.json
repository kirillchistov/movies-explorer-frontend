{"ast":null,"code":"var _jsxFileName = \"/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.jsx\",\n  _s = $RefreshSig$();\n//  Компонент с коллекцией фильмов  //\n//  Используем стейты для подсчета числа карточек и ширины экрана  //\nimport React from 'react';\nimport './MoviesCardList.css';\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport More from '../More/More';\nimport * as params from '../../utils/constants';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesCardList(_ref) {\n  _s();\n  let {\n    onBookmark,\n    onCheckBookmark,\n    removeSavedMovies,\n    movies\n  } = _ref;\n  const location = useLocation();\n  const savedMoviesPage = location.pathname === '/saved-movies';\n  const [moviesOnView, setMoviesOnView] = React.useState(0);\n  const [screen, setScreen] = React.useState(window.innerWidth);\n  const countCards = () => {\n    if (screen >= params.LARGESCREEN) {\n      setMoviesOnView(params.DEFAULTONLARGESCREEN);\n    } else if (screen < params.LARGESCREEN && screen >= params.MIDDLESCREEN) {\n      setMoviesOnView(params.DEFAULTONMIDDLESCREEN);\n    } else if (screen <= params.MIDDLESCREEN) {\n      setMoviesOnView(params.DEFAULTONSMALLSCREEN);\n    }\n  };\n  React.useEffect(() => {\n    countCards();\n  }, []);\n  window.onresize = function () {\n    setTimeout(() => {\n      countCards();\n      setScreen(window.innerWidth);\n    }, 1000);\n  };\n  const handleLoadMore = () => {\n    if (screen >= params.LARGESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONLARGESCREEN);\n    } else if (screen < params.LARGESCREEN && screen >= params.MIDDLESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONMIDDLESCREEN);\n    } else if (screen <= params.MIDDLESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONSMALLSCREEN);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movies__elements\",\n      children: movies.slice(0, savedMoviesPage ? movies.length : moviesOnView).map(item => /*#__PURE__*/_jsxDEV(MoviesCard, {\n        card: item,\n        onBookmark: onBookmark,\n        onCheckBookmark: onCheckBookmark,\n        removeSavedMovies: removeSavedMovies\n      }, item.id || item.movieId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), !savedMoviesPage && movies.length > moviesOnView && /*#__PURE__*/_jsxDEV(More, {\n      onLoadMore: handleLoadMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesCardList, \"5XJUJJv+sBXggpjiqLOn2ciJq6U=\", false, function () {\n  return [useLocation];\n});\n_c = MoviesCardList;\nexport default MoviesCardList;\nvar _c;\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"names":["React","MoviesCard","More","params","useLocation","MoviesCardList","onBookmark","onCheckBookmark","removeSavedMovies","movies","location","savedMoviesPage","pathname","moviesOnView","setMoviesOnView","useState","screen","setScreen","window","innerWidth","countCards","LARGESCREEN","DEFAULTONLARGESCREEN","MIDDLESCREEN","DEFAULTONMIDDLESCREEN","DEFAULTONSMALLSCREEN","useEffect","onresize","setTimeout","handleLoadMore","INCREASEONLARGESCREEN","INCREASEONMIDDLESCREEN","INCREASEONSMALLSCREEN","slice","length","map","item","id","movieId"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.jsx"],"sourcesContent":["//  Компонент с коллекцией фильмов  //\n//  Используем стейты для подсчета числа карточек и ширины экрана  //\nimport React from 'react';\nimport './MoviesCardList.css';\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport More from '../More/More';\nimport * as params from '../../utils/constants';\nimport { useLocation } from 'react-router-dom';\n\nfunction MoviesCardList({\n  onBookmark,\n  onCheckBookmark,\n  removeSavedMovies,\n  movies,\n}) {\n  const location = useLocation();\n  const savedMoviesPage = location.pathname === '/saved-movies';\n\n  const [moviesOnView, setMoviesOnView] = React.useState(0);\n  const [screen, setScreen] = React.useState(window.innerWidth);\n\n  const countCards = () => {\n    if (screen >= params.LARGESCREEN) {\n      setMoviesOnView(params.DEFAULTONLARGESCREEN);\n    } else if (screen < params.LARGESCREEN && screen >= params.MIDDLESCREEN) {\n      setMoviesOnView(params.DEFAULTONMIDDLESCREEN);\n    } else if (screen <= params.MIDDLESCREEN) {\n      setMoviesOnView(params.DEFAULTONSMALLSCREEN);\n    }\n  }\n\n  React.useEffect(() => {\n    countCards();\n  }, []);\n\n  window.onresize = function () {\n    setTimeout(() => {\n      countCards();\n      setScreen(window.innerWidth);\n    }, 1000);\n  };\n\n  const handleLoadMore = () => {\n    if (screen >= params.LARGESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONLARGESCREEN);\n    } else if (screen < params.LARGESCREEN && screen >= params.MIDDLESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONMIDDLESCREEN);\n    } else if (screen <= params.MIDDLESCREEN) {\n      setMoviesOnView(moviesOnView + params.INCREASEONSMALLSCREEN);\n    }\n  }\n\n  return (\n    <section className='movies'>\n      <ul className='movies__elements'>\n        {movies.slice(0, savedMoviesPage ? movies.length : moviesOnView).map((item) => (\n          <MoviesCard\n            key={item.id || item.movieId}\n            card={item}\n            onBookmark={onBookmark}\n            onCheckBookmark={onCheckBookmark}\n            removeSavedMovies={removeSavedMovies}\n          />\n        ))}\n      </ul>\n\n      {/* скрыть кнопку если карточек нет или мало */}\n      {!savedMoviesPage && movies.length > moviesOnView && (\n        <More onLoadMore={handleLoadMore} />\n      )}\n    </section>\n  );\n}\n\nexport default MoviesCardList;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAC7B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,KAAKC,MAAM,MAAM,uBAAuB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,SAASC,cAAc,OAKpB;EAAA;EAAA,IALqB;IACtBC,UAAU;IACVC,eAAe;IACfC,iBAAiB;IACjBC;EACF,CAAC;EACC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,eAAe,GAAGD,QAAQ,CAACE,QAAQ,KAAK,eAAe;EAE7D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,KAAK,CAACe,QAAQ,CAACG,MAAM,CAACC,UAAU,CAAC;EAE7D,MAAMC,UAAU,GAAG,MAAM;IACvB,IAAIJ,MAAM,IAAIb,MAAM,CAACkB,WAAW,EAAE;MAChCP,eAAe,CAACX,MAAM,CAACmB,oBAAoB,CAAC;IAC9C,CAAC,MAAM,IAAIN,MAAM,GAAGb,MAAM,CAACkB,WAAW,IAAIL,MAAM,IAAIb,MAAM,CAACoB,YAAY,EAAE;MACvET,eAAe,CAACX,MAAM,CAACqB,qBAAqB,CAAC;IAC/C,CAAC,MAAM,IAAIR,MAAM,IAAIb,MAAM,CAACoB,YAAY,EAAE;MACxCT,eAAe,CAACX,MAAM,CAACsB,oBAAoB,CAAC;IAC9C;EACF,CAAC;EAEDzB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpBN,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENF,MAAM,CAACS,QAAQ,GAAG,YAAY;IAC5BC,UAAU,CAAC,MAAM;MACfR,UAAU,EAAE;MACZH,SAAS,CAACC,MAAM,CAACC,UAAU,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMU,cAAc,GAAG,MAAM;IAC3B,IAAIb,MAAM,IAAIb,MAAM,CAACkB,WAAW,EAAE;MAChCP,eAAe,CAACD,YAAY,GAAGV,MAAM,CAAC2B,qBAAqB,CAAC;IAC9D,CAAC,MAAM,IAAId,MAAM,GAAGb,MAAM,CAACkB,WAAW,IAAIL,MAAM,IAAIb,MAAM,CAACoB,YAAY,EAAE;MACvET,eAAe,CAACD,YAAY,GAAGV,MAAM,CAAC4B,sBAAsB,CAAC;IAC/D,CAAC,MAAM,IAAIf,MAAM,IAAIb,MAAM,CAACoB,YAAY,EAAE;MACxCT,eAAe,CAACD,YAAY,GAAGV,MAAM,CAAC6B,qBAAqB,CAAC;IAC9D;EACF,CAAC;EAED,oBACE;IAAS,SAAS,EAAC,QAAQ;IAAA,wBACzB;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAC7BvB,MAAM,CAACwB,KAAK,CAAC,CAAC,EAAEtB,eAAe,GAAGF,MAAM,CAACyB,MAAM,GAAGrB,YAAY,CAAC,CAACsB,GAAG,CAAEC,IAAI,iBACxE,QAAC,UAAU;QAET,IAAI,EAAEA,IAAK;QACX,UAAU,EAAE9B,UAAW;QACvB,eAAe,EAAEC,eAAgB;QACjC,iBAAiB,EAAEC;MAAkB,GAJhC4B,IAAI,CAACC,EAAE,IAAID,IAAI,CAACE,OAAO;QAAA;QAAA;QAAA;MAAA,QAM/B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,EAGJ,CAAC3B,eAAe,IAAIF,MAAM,CAACyB,MAAM,GAAGrB,YAAY,iBAC/C,QAAC,IAAI;MAAC,UAAU,EAAEgB;IAAe;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEd;AAAC,GA/DQxB,cAAc;EAAA,QAMJD,WAAW;AAAA;AAAA,KANrBC,cAAc;AAiEvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}