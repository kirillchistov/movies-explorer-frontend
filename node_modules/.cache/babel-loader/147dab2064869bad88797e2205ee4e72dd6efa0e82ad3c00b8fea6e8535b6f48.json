{"ast":null,"code":"//  API для получения фильмов с сервера Я  //\n//  Проверка ответа сервера, получение коллекции фильмов  //\n\nimport { MOVIESURL } from './const.js';\nclass MoviesApi {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  async _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(await res.json());\n    }\n    return res.json();\n  }\n\n  // Загрузка карточек фильмов\n  getAllMovies() {\n    return fetch(`${this._baseUrl}`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst API_CONFIG = {\n  baseUrl: MOVIESURL,\n  credentials: 'include',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\nconst moviesApi = new MoviesApi(API_CONFIG);\nexport default moviesApi;","map":{"version":3,"names":["MOVIESURL","MoviesApi","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","Promise","reject","json","getAllMovies","fetch","method","then","API_CONFIG","credentials","moviesApi"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/utils/MoviesApi.js"],"sourcesContent":["//  API для получения фильмов с сервера Я  //\n//  Проверка ответа сервера, получение коллекции фильмов  //\n\nimport { MOVIESURL } from './const.js';\n\nclass MoviesApi {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  async _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(await res.json());\n    }\n    return res.json();\n  }\n\n  // Загрузка карточек фильмов\n  getAllMovies() {\n    return fetch(`${this._baseUrl}`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n}\nconst API_CONFIG = {\n  baseUrl: MOVIESURL,\n  credentials: 'include',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n};\n\nconst moviesApi = new MoviesApi(API_CONFIG);\n\nexport default moviesApi;\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,CAAC;EACdC,WAAW,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEA,MAAMC,cAAc,CAACC,GAAG,EAAE;IACxB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,OAAOC,OAAO,CAACC,MAAM,CAAC,MAAMH,GAAG,CAACI,IAAI,EAAE,CAAC;IACzC;IACA,OAAOJ,GAAG,CAACI,IAAI,EAAE;EACnB;;EAEA;EACAC,YAAY,GAAG;IACb,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,EAAC,EAAE;MAC/BY,MAAM,EAAE,KAAK;MACbT,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC9B;AAEF;AACA,MAAMU,UAAU,GAAG;EACjBb,OAAO,EAAEL,SAAS;EAClBmB,WAAW,EAAE,SAAS;EACtBZ,OAAO,EAAE;IACP,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAClB;AACF,CAAC;AAED,MAAMa,SAAS,GAAG,IAAInB,SAAS,CAACiB,UAAU,CAAC;AAE3C,eAAeE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}