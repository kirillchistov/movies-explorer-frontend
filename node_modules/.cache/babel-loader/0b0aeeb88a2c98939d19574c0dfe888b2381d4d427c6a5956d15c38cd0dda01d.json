{"ast":null,"code":"var _s = $RefreshSig$();\n//  Хук для управления формой и валидации данных  //\nimport React from \"react\";\nconst useFormWithValidation = () => {\n  _s();\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n  const handleChange = event => {\n    const {\n      value,\n      name,\n      validationMessage\n    } = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: validationMessage\n    });\n    setIsValid(event.target.closest(\"form\").checkValidity());\n  };\n  const resetForm = React.useCallback(function () {\n    let newValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let newErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let newIsValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm\n  };\n};\n_s(useFormWithValidation, \"msMIfc7pG71dSFDSlZa7+l3GN6k=\");\nexport default useFormWithValidation;","map":{"version":3,"names":["React","useFormWithValidation","values","setValues","useState","errors","setErrors","isValid","setIsValid","handleChange","event","value","name","validationMessage","target","closest","checkValidity","resetForm","useCallback","newValues","newErrors","newIsValid"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/hooks/useFormWithValidation.js"],"sourcesContent":["//  Хук для управления формой и валидации данных  //\nimport React from \"react\";\n\nconst useFormWithValidation = () => {\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  const handleChange = (event) => {\n    const { value, name, validationMessage } = event.target;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: validationMessage });\n    setIsValid(event.target.closest(\"form\").checkValidity());\n  };\n\n  const resetForm = React.useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm };\n}\n\nexport default useFormWithValidation;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,qBAAqB,GAAG,MAAM;EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAkB,CAAC,GAAGH,KAAK,CAACI,MAAM;IACvDX,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACU,IAAI,GAAGD;IAAK,CAAC,CAAC;IACrCL,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACO,IAAI,GAAGC;IAAkB,CAAC,CAAC;IAClDL,UAAU,CAACE,KAAK,CAACI,MAAM,CAACC,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,EAAE,CAAC;EAC1D,CAAC;EAED,MAAMC,SAAS,GAAGjB,KAAK,CAACkB,WAAW,CACjC,YAAwD;IAAA,IAAvDC,SAAS,uEAAG,CAAC,CAAC;IAAA,IAAEC,SAAS,uEAAG,CAAC,CAAC;IAAA,IAAEC,UAAU,uEAAG,KAAK;IACjDlB,SAAS,CAACgB,SAAS,CAAC;IACpBb,SAAS,CAACc,SAAS,CAAC;IACpBZ,UAAU,CAACa,UAAU,CAAC;EACxB,CAAC,EACD,CAAClB,SAAS,EAAEG,SAAS,EAAEE,UAAU,CAAC,CACnC;EAED,OAAO;IAAEN,MAAM;IAAEO,YAAY;IAAEJ,MAAM;IAAEE,OAAO;IAAEU;EAAU,CAAC;AAC7D,CAAC;AAAA,GAtBKhB,qBAAqB;AAwB3B,eAAeA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}