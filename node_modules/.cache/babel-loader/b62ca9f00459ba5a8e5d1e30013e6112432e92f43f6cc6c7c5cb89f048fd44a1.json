{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";//  Главный API ЛК - авторизация, работа с профилем и коллекцией фильмов  //\n//  Проверка ответа сервера, создание токена, редактирование профиля, коллекции фильмов  //\nimport{BASEURL}from'./constants.js';var MainApi=/*#__PURE__*/function(){function MainApi(options){_classCallCheck(this,MainApi);this._baseUrl=options.baseUrl;}_createClass(MainApi,[{key:\"_checkResponse\",value:function(){var _checkResponse2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(res){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(res.ok){_context.next=6;break;}_context.t0=Promise;_context.next=4;return res.json();case 4:_context.t1=_context.sent;return _context.abrupt(\"return\",_context.t0.reject.call(_context.t0,_context.t1));case 6:return _context.abrupt(\"return\",res.json());case 7:case\"end\":return _context.stop();}}},_callee);}));function _checkResponse(_x){return _checkResponse2.apply(this,arguments);}return _checkResponse;}()},{key:\"setToken\",value:function setToken(token){this._headers={Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)};}},{key:\"editProfileApi\",value:function editProfileApi(data){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',credentials:'include',headers:this._headers,body:JSON.stringify({name:data.name,email:data.email})}).then(this._checkResponse);}},{key:\"getSavedMovies\",value:function getSavedMovies(){return fetch(\"\".concat(this._baseUrl,\"/movies\"),{method:'GET',credentials:'include',headers:this._headers}).then(this._checkResponse);}},{key:\"addMovie\",value:function addMovie(data){return fetch(\"\".concat(this._baseUrl,\"/movies\"),{method:'POST',headers:this._headers,body:JSON.stringify({country:data.country,director:data.director,duration:data.duration,year:data.year,description:data.description,image:data.image,trailerLink:data.trailerLink,thumbnail:data.thumbnail,movieId:data.id,nameRU:data.nameRU,nameEN:data.nameEN})}).then(this._checkResponse);}},{key:\"removeMovie\",value:function removeMovie(movieId){return fetch(\"\".concat(this._baseUrl,\"/movies/\").concat(movieId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}]);return MainApi;}();var API_CONFIG={baseUrl:BASEURL,credentials:'include'};var mainApi=new MainApi(API_CONFIG);export default mainApi;","map":{"version":3,"names":["BASEURL","MainApi","options","_baseUrl","baseUrl","res","ok","Promise","json","reject","token","_headers","Accept","Authorization","data","fetch","method","credentials","headers","body","JSON","stringify","name","email","then","_checkResponse","country","director","duration","year","description","image","trailerLink","thumbnail","movieId","id","nameRU","nameEN","API_CONFIG","mainApi"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["//  Главный API ЛК - авторизация, работа с профилем и коллекцией фильмов  //\n//  Проверка ответа сервера, создание токена, редактирование профиля, коллекции фильмов  //\n\nimport { BASEURL } from './constants.js';\n\nclass MainApi {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n  }\n\n  async _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(await res.json());\n    }\n    return res.json();\n  }\n\n  setToken(token) {\n    this._headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    };\n  }\n\n  editProfileApi(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getSavedMovies() {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  addMovie(data) {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        year: data.year,\n        description: data.description,\n        image: data.image,\n        trailerLink: data.trailerLink,\n        thumbnail: data.thumbnail,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  removeMovie(movieId) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n}\n\nconst API_CONFIG = {\n  baseUrl: BASEURL,\n  credentials: 'include',\n};\n\nconst mainApi = new MainApi(API_CONFIG);\n\nexport default mainApi;\n"],"mappings":"8jBAAA;AACA;AAEA,OAASA,OAAO,KAAQ,gBAAgB,CAAC,GAEnCC,QAAO,yBACX,iBAAYC,OAAO,CAAE,+BACnB,IAAI,CAACC,QAAQ,CAAGD,OAAO,CAACE,OAAO,CACjC,CAAC,2IAED,iBAAqBC,GAAG,uHACjBA,GAAG,CAACC,EAAE,qCACFC,OAAO,uBAAcF,IAAG,CAACG,IAAI,EAAE,8EAAvBC,MAAM,uEAEhBJ,GAAG,CAACG,IAAI,EAAE,wDAClB,8HAED,kBAASE,KAAK,CAAE,CACd,IAAI,CAACC,QAAQ,CAAG,CACdC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAAkB,CAClCC,aAAa,kBAAYH,KAAK,CAChC,CAAC,CACH,CAAC,8BAED,wBAAeI,IAAI,CAAE,CACnB,MAAOC,MAAK,WAAI,IAAI,CAACZ,QAAQ,cAAa,CACxCa,MAAM,CAAE,OAAO,CACfC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,IAAI,CAACP,QAAQ,CACtBQ,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAER,IAAI,CAACQ,IAAI,CACfC,KAAK,CAAET,IAAI,CAACS,KACd,CAAC,CACH,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAC9B,CAAC,8BAED,yBAAiB,CACf,MAAOV,MAAK,WAAI,IAAI,CAACZ,QAAQ,YAAW,CACtCa,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,IAAI,CAACP,QAChB,CAAC,CAAC,CAACa,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAC9B,CAAC,wBAED,kBAASX,IAAI,CAAE,CACb,MAAOC,MAAK,WAAI,IAAI,CAACZ,QAAQ,YAAW,CACtCa,MAAM,CAAE,MAAM,CACdE,OAAO,CAAE,IAAI,CAACP,QAAQ,CACtBQ,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBK,OAAO,CAAEZ,IAAI,CAACY,OAAO,CACrBC,QAAQ,CAAEb,IAAI,CAACa,QAAQ,CACvBC,QAAQ,CAAEd,IAAI,CAACc,QAAQ,CACvBC,IAAI,CAAEf,IAAI,CAACe,IAAI,CACfC,WAAW,CAAEhB,IAAI,CAACgB,WAAW,CAC7BC,KAAK,CAAEjB,IAAI,CAACiB,KAAK,CACjBC,WAAW,CAAElB,IAAI,CAACkB,WAAW,CAC7BC,SAAS,CAAEnB,IAAI,CAACmB,SAAS,CACzBC,OAAO,CAAEpB,IAAI,CAACqB,EAAE,CAChBC,MAAM,CAAEtB,IAAI,CAACsB,MAAM,CACnBC,MAAM,CAAEvB,IAAI,CAACuB,MACf,CAAC,CACH,CAAC,CAAC,CAACb,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAC9B,CAAC,2BAED,qBAAYS,OAAO,CAAE,CACnB,MAAOnB,MAAK,WAAI,IAAI,CAACZ,QAAQ,oBAAW+B,OAAO,EAAI,CACjDlB,MAAM,CAAE,QAAQ,CAChBE,OAAO,CAAE,IAAI,CAACP,QAChB,CAAC,CAAC,CAACa,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAC9B,CAAC,uBAGH,GAAMa,WAAU,CAAG,CACjBlC,OAAO,CAAEJ,OAAO,CAChBiB,WAAW,CAAE,SACf,CAAC,CAED,GAAMsB,QAAO,CAAG,GAAItC,QAAO,CAACqC,UAAU,CAAC,CAEvC,cAAeC,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}