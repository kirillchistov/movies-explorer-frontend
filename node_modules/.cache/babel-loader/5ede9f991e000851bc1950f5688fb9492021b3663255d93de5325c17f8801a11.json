{"ast":null,"code":"var _jsxFileName = \"/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/ToggleSwitch/ToggleSwitch.jsx\";\n//  Компонент переключения  //\nimport './ToggleSwitch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = _ref => {\n  let {\n    status,\n    onColor,\n    handleToggleClick,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: status,\n      onChange: handleToggleClick,\n      className: \"toggleswitch\",\n      id: `toggleswitch`,\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        background: status && onColor\n      },\n      className: \"toggleswitch__label\",\n      htmlFor: `toggleswitch`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `toggleswitch__button`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggleswitch__caption\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["ToggleSwitch","status","onColor","handleToggleClick","name","background"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/ToggleSwitch/ToggleSwitch.jsx"],"sourcesContent":["//  Компонент переключения  //\nimport './ToggleSwitch.css';\n\nconst ToggleSwitch = ({ status, onColor, handleToggleClick, name }) => {\n  return (\n    <>\n      <input\n        checked={status}\n        onChange={handleToggleClick}\n        className='toggleswitch'\n        id={`toggleswitch`}\n        type='checkbox'\n      />\n      <label\n        style={{ background: status && onColor }}\n        className='toggleswitch__label'\n        htmlFor={`toggleswitch`}\n      >\n        <span className={`toggleswitch__button`} />\n        <p className=\"toggleswitch__caption\">{name}</p>\n      </label>\n    </>\n  );\n}\n\nexport default ToggleSwitch;\n"],"mappings":";AAAA;AACA,OAAO,oBAAoB;AAAC;AAAA;AAE5B,MAAMA,YAAY,GAAG,QAAkD;EAAA,IAAjD;IAAEC,MAAM;IAAEC,OAAO;IAAEC,iBAAiB;IAAEC;EAAK,CAAC;EAChE,oBACE;IAAA,wBACE;MACE,OAAO,EAAEH,MAAO;MAChB,QAAQ,EAAEE,iBAAkB;MAC5B,SAAS,EAAC,cAAc;MACxB,EAAE,EAAG,cAAc;MACnB,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QACf,eACF;MACE,KAAK,EAAE;QAAEE,UAAU,EAAEJ,MAAM,IAAIC;MAAQ,CAAE;MACzC,SAAS,EAAC,qBAAqB;MAC/B,OAAO,EAAG,cAAc;MAAA,wBAExB;QAAM,SAAS,EAAG;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C;QAAG,SAAS,EAAC,uBAAuB;QAAA,UAAEE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA,gBACP;AAEP,CAAC;AAAA,KApBKJ,YAAY;AAsBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}