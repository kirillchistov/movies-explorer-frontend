{"ast":null,"code":"import _toConsumableArray from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/kirillchistov/Projects/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//  App — корневой компонент приложения, его создаёт CRA  //\n//  Импорт библиотек  //\nimport React,{useEffect,useState}from'react';import{Redirect,Route,Switch,useHistory,useLocation}from'react-router-dom';//  Импорт всех компонентов  //\nimport ProtectedRoute from'../ProtectedRoute/ProtectedRoute';import Header from'../Header/Header';import Main from'../Main/Main';import NotFound from'../NotFound/NotFound';import Movies from'../Movies/Movies';import Register from'../Register/Register';import Login from'../Login/Login';import Profile from'../Profile/Profile';import SavedMovies from'../SavedMovies/SavedMovies';import Footer from'../Footer/Footer';import auth from'../../utils/auth';import mainApi from'../../utils/MainApi.js';import moviesApi from'../../utils/MoviesApi';//  Импорт контекста пользователя  //\nimport{CurrentUserContext}from'../../contexts/CurrentUserContext';//  Импорт локальных стилей  //\nimport'./App.css';//  Компонент приложения с хуками, состояниями и эффектами жизненного цикла  //\n//  Стейты авторизации, прелоудера, ошибок, стартового набора фильмов, поиска и т.д.  //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var history=useHistory();var location=useLocation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setloggedIn=_useState2[1];var _useState3=useState({name:'',email:''}),_useState4=_slicedToArray(_useState3,2),currentUser=_useState4[0],setCurrentUser=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState({isRequestError:false,messageRequestError:''}),_useState8=_slicedToArray(_useState7,2),requestSignUpError=_useState8[0],setRequestSignUpError=_useState8[1];var _useState9=useState({isRequestError:false,messageRequestError:''}),_useState10=_slicedToArray(_useState9,2),requestSignInError=_useState10[0],setRequestSignInError=_useState10[1];var _useState11=useState({isRequestError:false,messageRequestError:''}),_useState12=_slicedToArray(_useState11,2),requestEditProfileError=_useState12[0],setRequestEditProfileError=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),allMovies=_useState14[0],setAllMovies=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),filteredMovies=_useState16[0],setFilteredMovies=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),savedMovies=_useState18[0],setSavedMovies=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),filteredSavedMovies=_useState20[0],setFilteredSavedMovies=_useState20[1];var _useState21=useState({isRequestError:false,messageRequestError:''}),_useState22=_slicedToArray(_useState21,2),requestSearchError=_useState22[0],setRequestSearchError=_useState22[1];//  Обработчик логина  //\nvar handleSignIn=function handleSignIn(data){auth.signInApi(data).then(function(res){if(res.token){localStorage.setItem('jwt',res.token);handleTokenCheck();history.push('/movies');}}).catch(function(err){console.log('Ошибка авторизации');console.log(err);if(err.statusCode===400){err.message='Вы ввели неправильный логин или пароль';}setRequestSignInError({isRequestError:true,messageRequestError:err.message});});};// Обработчик проверки токена  //\nvar handleTokenCheck=function handleTokenCheck(){// console.log('check');\nvar token=localStorage.getItem('jwt');if(token){auth.authApi(token).then(function(res){if(res){setloggedIn(true);setCurrentUser({name:res.name,email:res.email});mainApi.setToken(token);history.push(location.pathname);}}).catch(function(err){console.log(\"\\u0412\\u043E\\u0437\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430. \".concat(err));console.log(err);if(err.statusCode===401){handleSignOut();}});// return;\n}// handleSignOut();\n};//  Обработчик регистрации  //\nvar handleSignUp=function handleSignUp(data){auth.signUpApi(data).then(function(res){if(res){handleSignIn(data);}}).catch(function(err){console.log('Ошибка регистрации');setRequestSignUpError({isRequestError:true,messageRequestError:err.message});});};//  Обработчик выхода из аккаунта  //\nvar handleSignOut=function handleSignOut(){localStorage.clear();setloggedIn(false);setAllMovies([]);setSavedMovies([]);setFilteredMovies([]);setFilteredSavedMovies([]);setCurrentUser({name:'',email:''});history.push('/');};//  Обработчик редактирования профиля  //\nvar handleUpdateProfile=function handleUpdateProfile(data){mainApi.editProfileApi(data).then(function(res){if(res){setCurrentUser({name:res.name,email:res.email});setRequestEditProfileError({isRequestError:true,messageRequestError:'Данные обновлены'});}}).catch(function(err){console.log('Ошибка обновления профиля');setRequestEditProfileError({isRequestError:true,messageRequestError:err.message});});};useEffect(function(){handleTokenCheck();},[]);//  Хук поиска по фильмам  //\nuseEffect(function(){setRequestSearchError({isRequestError:false,messageRequestError:''});if(loggedIn){// localStorage.setItem('shortMovie', false);\n// localStorage.setItem('searchText', '');\ngetAllMovies();getSavedMovies();if(localStorage.getItem('searchMovies')){setFilteredMovies(JSON.parse(localStorage.getItem('searchMovies')));if(JSON.parse(localStorage.getItem('searchMovies')).length===0){setRequestSearchError({isRequestError:true,messageRequestError:'Ничего не найдено'});}setIsLoading(false);}}},[loggedIn]);useEffect(function(){if(location.pathname==='/movies'){if(!localStorage.getItem('searchMovies')){setRequestSearchError({isRequestError:false,messageRequestError:''});}}if(location.pathname==='/saved-movies'){setRequestSearchError({isRequestError:false,messageRequestError:''});setFilteredSavedMovies(savedMovies);}},[location,savedMovies]);//  Получение коллекции всех фильмов  //\nvar getAllMovies=function getAllMovies(){if(localStorage.getItem('allMovies')){setAllMovies(JSON.parse(localStorage.getItem('allMovies')));}else{moviesApi.getAllMovies().then(function(data){localStorage.setItem('allMovies',JSON.stringify(data));setAllMovies(data);}).catch(function(err){console.log(err);setRequestSearchError({isRequestError:true,messageRequestError:'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз'});});}};//  Получение сохраненных фильмов  //\nvar getSavedMovies=function getSavedMovies(){mainApi.getSavedMovies().then(function(data){setSavedMovies(data);setFilteredSavedMovies(data);}).catch(function(err){console.log(err);});};//  Обработчик сохранения избранных фильмов  //\nvar handleAddSavedMovies=function handleAddSavedMovies(card){addSavedMovies(card);};var addSavedMovies=function addSavedMovies(card){mainApi.addMovie(card).then(function(data){setSavedMovies([].concat(_toConsumableArray(savedMovies),[data]));setFilteredSavedMovies([].concat(_toConsumableArray(savedMovies),[data]));}).catch(function(err){console.log(err);});};// Удаление из избранного\nvar handlerRemoveSavedMovies=function handlerRemoveSavedMovies(card){savedMovies.forEach(function(i){if(i.movieId===card.id){removeSavedMovies(i);}});};//  Удаление из избранного  //\nvar removeSavedMovies=function removeSavedMovies(card){mainApi.removeMovie(card._id).then(function(){setSavedMovies(savedMovies.filter(function(i){return i.movieId!==card.movieId;}));setFilteredSavedMovies(savedMovies.filter(function(i){return i.movieId!==card.movieId;}));}).catch(function(err){console.log(err);});};//  Обработка избранного - проверка наличия закладки  //\nvar handleBookmark=function handleBookmark(card){if(!onCheckBookmark(card)){handleAddSavedMovies(card);}else{handlerRemoveSavedMovies(card);}};var onCheckBookmark=function onCheckBookmark(card){return savedMovies.some(function(i){return i.movieId===card.id;});};//  Поиск по фильмам  //\nvar searchMovie=function searchMovie(searchText){var allMoviesPage=location.pathname==='/movies';var savedMoviesPage=location.pathname==='/saved-movies';var movies=allMoviesPage?allMovies:savedMovies;setIsLoading(true);setRequestSearchError({isRequestError:false,messageRequestError:''});var filter=movies.filter(function(i){return i.nameRU.toLowerCase().includes(searchText.toLowerCase());});if(savedMoviesPage){setRequestSearchError({isRequestError:false,messageRequestError:''});if(!searchText){setRequestSearchError({isRequestError:true,messageRequestError:'Введите ключевое слово'});// return;\n}setFilteredSavedMovies(filter);}if(allMoviesPage){if(!searchText){setRequestSearchError({isRequestError:true,messageRequestError:'Введите ключевое слово'});localStorage.removeItem('searchMovies');setFilteredMovies([]);setIsLoading(false);return;}setRequestSearchError({isRequestError:false,messageRequestError:''});setFilteredMovies(filter);localStorage.setItem('searchMovies',JSON.stringify(filter));}if(filter.length===0){setRequestSearchError({isRequestError:true,messageRequestError:'Ничего не найдено'});setIsLoading(false);}setIsLoading(false);};return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[/*#__PURE__*/_jsx(Header,{loggedIn:loggedIn}),/*#__PURE__*/_jsx(Main,{loggedIn:loggedIn}),/*#__PURE__*/_jsx(Footer,{})]}),/*#__PURE__*/_jsx(Route,{path:\"/movies-demo\",children:loggedIn?/*#__PURE__*/_jsx(Redirect,{to:\"/movies\"}):/*#__PURE__*/_jsx(Movies,{component:Movies,isLoading:isLoading,movies:filteredMovies,searchMovie:searchMovie,onBookmark:handleBookmark,onCheckBookmark:onCheckBookmark,setRequestSearchError:setRequestSearchError,requestSearchError:requestSearchError})}),/*#__PURE__*/_jsx(ProtectedRoute,{component:Movies,exact:true,path:\"/movies\",loggedIn:loggedIn,isLoading:isLoading,movies:filteredMovies,searchMovie:searchMovie,onBookmark:handleBookmark,onCheckBookmark:onCheckBookmark,setRequestSearchError:setRequestSearchError,requestSearchError:requestSearchError}),/*#__PURE__*/_jsx(ProtectedRoute,{component:SavedMovies,exact:true,path:\"/saved-movies\",loggedIn:loggedIn,isLoading:isLoading,movies:filteredSavedMovies,searchMovie:searchMovie,removeSavedMovies:removeSavedMovies,setRequestSearchError:setRequestSearchError,requestSearchError:requestSearchError}),/*#__PURE__*/_jsx(ProtectedRoute,{component:Profile,exact:true,path:\"/profile\",loggedIn:loggedIn,onSignOut:handleSignOut,onUpdateProfile:handleUpdateProfile,requestEditProfileError:requestEditProfileError}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",children:loggedIn?/*#__PURE__*/_jsx(Redirect,{to:\"/movies\"}):/*#__PURE__*/_jsx(Register,{onSignUp:handleSignUp,requestSignUpError:requestSignUpError})}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",children:loggedIn?/*#__PURE__*/_jsx(Redirect,{to:\"/movies\"}):/*#__PURE__*/_jsx(Login,{onSignIn:handleSignIn,requestSignInError:requestSignInError})}),/*#__PURE__*/_jsx(Route,{children:/*#__PURE__*/_jsx(NotFound,{})})]})})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","Redirect","Route","Switch","useHistory","useLocation","ProtectedRoute","Header","Main","NotFound","Movies","Register","Login","Profile","SavedMovies","Footer","auth","mainApi","moviesApi","CurrentUserContext","App","history","location","loggedIn","setloggedIn","name","email","currentUser","setCurrentUser","isLoading","setIsLoading","isRequestError","messageRequestError","requestSignUpError","setRequestSignUpError","requestSignInError","setRequestSignInError","requestEditProfileError","setRequestEditProfileError","allMovies","setAllMovies","filteredMovies","setFilteredMovies","savedMovies","setSavedMovies","filteredSavedMovies","setFilteredSavedMovies","requestSearchError","setRequestSearchError","handleSignIn","data","signInApi","then","res","token","localStorage","setItem","handleTokenCheck","push","catch","err","console","log","statusCode","message","getItem","authApi","setToken","pathname","handleSignOut","handleSignUp","signUpApi","clear","handleUpdateProfile","editProfileApi","getAllMovies","getSavedMovies","JSON","parse","length","stringify","handleAddSavedMovies","card","addSavedMovies","addMovie","handlerRemoveSavedMovies","forEach","i","movieId","id","removeSavedMovies","removeMovie","_id","filter","handleBookmark","onCheckBookmark","some","searchMovie","searchText","allMoviesPage","savedMoviesPage","movies","nameRU","toLowerCase","includes","removeItem"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/App/App.jsx"],"sourcesContent":["//  App — корневой компонент приложения, его создаёт CRA  //\n//  Импорт библиотек  //\nimport React, { useEffect, useState } from 'react';\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\n\n//  Импорт всех компонентов  //\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport NotFound from '../NotFound/NotFound';\nimport Movies from '../Movies/Movies';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Footer from '../Footer/Footer';\nimport auth from '../../utils/auth';\nimport mainApi from '../../utils/MainApi.js';\nimport moviesApi from '../../utils/MoviesApi';\n//  Импорт контекста пользователя  //\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n//  Импорт локальных стилей  //\nimport './App.css';\n\n//  Компонент приложения с хуками, состояниями и эффектами жизненного цикла  //\n//  Стейты авторизации, прелоудера, ошибок, стартового набора фильмов, поиска и т.д.  //\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n  \n  const [loggedIn, setloggedIn] = useState(false);\n  \n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    email: '',\n  });\n  \n  const [isLoading, setIsLoading] = useState(true);\n  \n  const [requestSignUpError, setRequestSignUpError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  const [requestSignInError, setRequestSignInError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  const [requestEditProfileError, setRequestEditProfileError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  \n  const [allMovies, setAllMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [filteredSavedMovies, setFilteredSavedMovies] = useState([]);\n\n  const [requestSearchError, setRequestSearchError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n\n  //  Обработчик логина  //\n  const handleSignIn = (data) => {\n    auth\n      .signInApi(data)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          handleTokenCheck();\n          history.push('/movies');\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка авторизации');\n        console.log(err);\n        if (err.statusCode === 400) {\n          err.message = 'Вы ввели неправильный логин или пароль';\n        }\n        setRequestSignInError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  // Обработчик проверки токена  //\n  const handleTokenCheck = () => {\n    // console.log('check');\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth\n        .authApi(token)\n        .then((res) => {\n          if (res) {\n            setloggedIn(true);\n            setCurrentUser({ name: res.name, email: res.email });\n            mainApi.setToken(token);\n            history.push(location.pathname);\n          }\n        })\n        .catch((err) => {\n          console.log(`Возникла ошибка. ${err}`);\n          console.log(err);\n          if (err.statusCode === 401) {\n            handleSignOut();\n          }\n        });\n      // return;\n    }\n    // handleSignOut();\n  }\n\n  //  Обработчик регистрации  //\n  const handleSignUp = (data) => {\n    auth\n      .signUpApi(data)\n      .then((res) => {\n        if (res) {\n          handleSignIn(data);\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка регистрации');\n        setRequestSignUpError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  //  Обработчик выхода из аккаунта  //\n  const handleSignOut = () => {\n    localStorage.clear();\n    setloggedIn(false);\n    setAllMovies([]);\n    setSavedMovies([]);\n    setFilteredMovies([]);\n    setFilteredSavedMovies([]);\n    setCurrentUser({\n      name: '',\n      email: '',\n    });\n    history.push('/');\n  }\n\n  //  Обработчик редактирования профиля  //\n  const handleUpdateProfile= (data) => {\n    mainApi\n      .editProfileApi(data)\n      .then((res) => {\n        if (res) {\n          setCurrentUser({ name: res.name, email: res.email });\n          setRequestEditProfileError({\n            isRequestError: true,\n            messageRequestError: 'Данные обновлены',\n          });\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка обновления профиля');\n        setRequestEditProfileError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  //  Хук поиска по фильмам  //\n  useEffect(() => {\n    setRequestSearchError({\n      isRequestError: false,\n      messageRequestError: '',\n    });  \n    if (loggedIn) {\n      // localStorage.setItem('shortMovie', false);\n      // localStorage.setItem('searchText', '');\n      getAllMovies();\n      getSavedMovies();\n      if (localStorage.getItem('searchMovies')) {\n        setFilteredMovies(JSON.parse(localStorage.getItem('searchMovies')));\n        if (JSON.parse(localStorage.getItem('searchMovies')).length === 0) {\n          setRequestSearchError({\n            isRequestError: true,\n            messageRequestError: 'Ничего не найдено',\n          });\n        }\n        setIsLoading(false);\n      }\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    if (location.pathname === '/movies') {\n      if (!localStorage.getItem('searchMovies')) {\n        setRequestSearchError({\n          isRequestError: false,\n          messageRequestError: '',\n        });\n      }\n    }\n    if (location.pathname === '/saved-movies') {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });  \n      setFilteredSavedMovies(savedMovies);\n    }\n  }, [location, savedMovies]);\n\n  //  Получение коллекции всех фильмов  //\n  const getAllMovies = () => {\n    if (localStorage.getItem('allMovies')) {\n      setAllMovies(JSON.parse(localStorage.getItem('allMovies')));\n    } else {\n      moviesApi\n        .getAllMovies()\n        .then((data) => {\n          localStorage.setItem('allMovies', JSON.stringify(data));\n          setAllMovies(data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setRequestSearchError({\n            isRequestError: true,\n            messageRequestError:\n              'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз',\n          });\n        });\n    }\n  }\n\n  //  Получение сохраненных фильмов  //\n  const getSavedMovies = () => {\n    mainApi\n      .getSavedMovies()\n      .then((data) => {\n        setSavedMovies(data);\n        setFilteredSavedMovies(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Обработчик сохранения избранных фильмов  //\n  const handleAddSavedMovies = (card) => {\n    addSavedMovies(card);\n  }\n\n  const addSavedMovies = (card) => {\n    mainApi\n      .addMovie(card)\n      .then((data) => {\n        setSavedMovies([...savedMovies, data]);\n        setFilteredSavedMovies([...savedMovies, data]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Удаление из избранного\n  const handlerRemoveSavedMovies = (card) => {\n    savedMovies.forEach((i) => {\n      if (i.movieId === card.id) {\n        removeSavedMovies(i);\n      }\n    });\n  }\n\n  //  Удаление из избранного  //\n  const removeSavedMovies = (card) => {\n    mainApi\n      .removeMovie(card._id)\n      .then(() => {\n        setSavedMovies(savedMovies.filter((i) => i.movieId !== card.movieId));\n        setFilteredSavedMovies(\n          savedMovies.filter((i) => i.movieId !== card.movieId),\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Обработка избранного - проверка наличия закладки  //\n  const handleBookmark = (card) => {\n    if (!onCheckBookmark(card)) {\n      handleAddSavedMovies(card);\n    } else {\n      handlerRemoveSavedMovies(card);\n    }\n  }\n\n  const onCheckBookmark = (card) => {\n    return savedMovies.some((i) => i.movieId === card.id);\n  }\n  //  Поиск по фильмам  //\n  const searchMovie = (searchText) => {\n    const allMoviesPage = location.pathname === '/movies';\n    const savedMoviesPage = location.pathname === '/saved-movies';\n    const movies = allMoviesPage ? allMovies : savedMovies;\n\n    setIsLoading(true);\n    setRequestSearchError({ isRequestError: false, messageRequestError: '' });\n\n    const filter = movies.filter((i) =>\n      i.nameRU.toLowerCase().includes(searchText.toLowerCase()),\n    );\n\n    if (savedMoviesPage) {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово',\n        });\n        // return;\n      }\n      setFilteredSavedMovies(filter);\n    }\n\n    if (allMoviesPage) {\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово',\n        });\n        localStorage.removeItem('searchMovies');\n        setFilteredMovies([]);\n        setIsLoading(false);\n        return;\n      }\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });\n      setFilteredMovies(filter);\n      localStorage.setItem('searchMovies', JSON.stringify(filter));\n    }\n\n    if (filter.length === 0) {\n      setRequestSearchError({\n        isRequestError: true,\n        messageRequestError: 'Ничего не найдено',\n      });\n      setIsLoading(false);\n    }\n\n    setIsLoading(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <Switch>\n          <Route exact path='/'>\n            <Header loggedIn={loggedIn} />\n            <Main loggedIn={loggedIn} />\n            <Footer />\n          </Route>\n\n          <Route path='/movies-demo'>\n            {loggedIn ? (\n              <Redirect to='/movies' />\n            ) : (\n              <Movies\n                component={Movies}\n                isLoading={isLoading}\n                movies={filteredMovies}\n                searchMovie={searchMovie}\n                onBookmark={handleBookmark}\n                onCheckBookmark={onCheckBookmark}\n                setRequestSearchError={setRequestSearchError}\n                requestSearchError={requestSearchError}\n              />\n            )}\n          </Route>\n\n          <ProtectedRoute\n            component={Movies}\n            exact path='/movies'\n            loggedIn={loggedIn}\n            isLoading={isLoading}\n            movies={filteredMovies}\n            searchMovie={searchMovie}\n            onBookmark={handleBookmark}\n            onCheckBookmark={onCheckBookmark}\n            setRequestSearchError={setRequestSearchError}\n            requestSearchError={requestSearchError}\n          />\n\n          <ProtectedRoute\n            component={SavedMovies}\n            exact\n            path='/saved-movies'\n            loggedIn={loggedIn}\n            isLoading={isLoading}\n            movies={filteredSavedMovies}\n            searchMovie={searchMovie}\n            removeSavedMovies={removeSavedMovies}\n            setRequestSearchError={setRequestSearchError}\n            requestSearchError={requestSearchError}\n          />\n\n          <ProtectedRoute\n            component={Profile}\n            exact\n            path='/profile'\n            loggedIn={loggedIn}\n            onSignOut={handleSignOut}\n            onUpdateProfile={handleUpdateProfile}\n            requestEditProfileError={requestEditProfileError}\n          />\n\n          <Route path='/signup'>\n            {loggedIn ? (\n              <Redirect to='/movies' />\n            ) : (\n              <Register\n                onSignUp={handleSignUp}\n                requestSignUpError={requestSignUpError}\n              />\n            )}\n          </Route>\n\n          <Route path='/signin'>\n            {loggedIn ? (\n              <Redirect to='/movies' />\n            ) : (\n              <Login\n                onSignIn={handleSignIn}\n                requestSignInError={requestSignInError}\n              />\n            )}\n          </Route>\n\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}