{"ast":null,"code":"var _jsxFileName = \"/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\n//  App — корневой компонент приложения, его создаёт CRA  //\n//  Импорт библиотек  //\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useHistory, useLocation } from 'react-router-dom';\n\n//  Импорт всех компонентов  //\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport NotFound from '../NotFound/NotFound';\nimport Movies from '../Movies/Movies';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Footer from '../Footer/Footer';\nimport auth from '../../utils/auth';\nimport mainApi from '../../utils/MainApi.js';\nimport moviesApi from '../../utils/MoviesApi';\n//  Импорт контекста пользователя  //\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n//  Импорт локальных стилей  //\nimport './App.css';\n\n//  Компонент приложения с хуками, состояниями и эффектами жизненного цикла  //\n//  Стейты авторизации, прелоудера, ошибок, стартового набора фильмов, поиска и т.д.  //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const [loggedIn, setloggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Kirill',\n    email: 'kirill.v.chistov@yandex.ru'\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [requestSignUpError, setRequestSignUpError] = useState({\n    isRequestError: false,\n    messageRequestError: ''\n  });\n  const [requestSignInError, setRequestSignInError] = useState({\n    isRequestError: false,\n    messageRequestError: ''\n  });\n  const [requestEditProfileError, setRequestEditProfileError] = useState({\n    isRequestError: false,\n    messageRequestError: ''\n  });\n  const [allMovies, setAllMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [filteredSavedMovies, setFilteredSavedMovies] = useState([]);\n  const [requestSearchError, setRequestSearchError] = useState({\n    isRequestError: false,\n    messageRequestError: ''\n  });\n\n  //  Обработчик логина  //\n  const handleSignIn = data => {\n    auth.signInApi(data).then(res => {\n      if (res.token) {\n        localStorage.setItem('jwt', res.token);\n        handleTokenCheck();\n        history.push('/movies');\n      }\n    }).catch(err => {\n      console.log('Ошибка авторизации');\n      console.log(err);\n      if (err.statusCode === 400) {\n        err.message = 'Вы ввели неправильный логин или пароль';\n      }\n      setRequestSignInError({\n        isRequestError: true,\n        messageRequestError: err.message\n      });\n    });\n  };\n\n  // Обработчик проверки токена  //\n  const handleTokenCheck = () => {\n    // console.log('check');\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth.authApi(token).then(res => {\n        if (res) {\n          setloggedIn(true);\n          setCurrentUser({\n            name: res.name,\n            email: res.email\n          });\n          mainApi.setToken(token);\n          history.push(location.pathname);\n        }\n      }).catch(err => {\n        console.log(`Возникла ошибка. ${err}`);\n        console.log(err);\n        if (err.statusCode === 401) {\n          handleSignOut();\n        }\n      });\n      // return;\n    }\n    // handleSignOut();\n  };\n\n  //  Обработчик регистрации  //\n  const handleSignUp = data => {\n    auth.signUpApi(data).then(res => {\n      if (res) {\n        handleSignIn(data);\n      }\n    }).catch(err => {\n      console.log('Ошибка регистрации');\n      setRequestSignUpError({\n        isRequestError: true,\n        messageRequestError: err.message\n      });\n    });\n  };\n\n  //  Обработчик выхода из аккаунта  //\n  const handleSignOut = () => {\n    localStorage.clear();\n    setloggedIn(false);\n    setAllMovies([]);\n    setSavedMovies([]);\n    setFilteredMovies([]);\n    setFilteredSavedMovies([]);\n    setCurrentUser({\n      name: '',\n      email: ''\n    });\n    history.push('/');\n  };\n\n  //  Обработчик редактирования профиля  //\n  const handleUpdateProfile = data => {\n    mainApi.editProfileApi(data).then(res => {\n      if (res) {\n        setCurrentUser({\n          name: res.name,\n          email: res.email\n        });\n        setRequestEditProfileError({\n          isRequestError: true,\n          messageRequestError: 'Данные обновлены'\n        });\n      }\n    }).catch(err => {\n      console.log('Ошибка обновления профиля');\n      setRequestEditProfileError({\n        isRequestError: true,\n        messageRequestError: err.message\n      });\n    });\n  };\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  //  Хук поиска по фильмам  //\n  useEffect(() => {\n    setRequestSearchError({\n      isRequestError: false,\n      messageRequestError: ''\n    });\n    if (loggedIn) {\n      // localStorage.setItem('shortMovie', false);\n      // localStorage.setItem('searchText', '');\n      getAllMovies();\n      getSavedMovies();\n      if (localStorage.getItem('searchMovies')) {\n        setFilteredMovies(JSON.parse(localStorage.getItem('searchMovies')));\n        if (JSON.parse(localStorage.getItem('searchMovies')).length === 0) {\n          setRequestSearchError({\n            isRequestError: true,\n            messageRequestError: 'Ничего не найдено'\n          });\n        }\n        setIsLoading(false);\n      }\n    }\n  }, [loggedIn]);\n  useEffect(() => {\n    if (location.pathname === '/movies') {\n      if (!localStorage.getItem('searchMovies')) {\n        setRequestSearchError({\n          isRequestError: false,\n          messageRequestError: ''\n        });\n      }\n    }\n    if (location.pathname === '/saved-movies') {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: ''\n      });\n      setFilteredSavedMovies(savedMovies);\n    }\n  }, [location, savedMovies]);\n\n  //  Получение коллекции всех фильмов  //\n  const getAllMovies = () => {\n    if (localStorage.getItem('allMovies')) {\n      setAllMovies(JSON.parse(localStorage.getItem('allMovies')));\n    } else {\n      moviesApi.getAllMovies().then(data => {\n        localStorage.setItem('allMovies', JSON.stringify(data));\n        setAllMovies(data);\n      }).catch(err => {\n        console.log(err);\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз'\n        });\n      });\n    }\n  };\n\n  //  Получение сохраненных фильмов  //\n  const getSavedMovies = () => {\n    mainApi.getSavedMovies().then(data => {\n      setSavedMovies(data);\n      setFilteredSavedMovies(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  //  Обработчик сохранения избранных фильмов  //\n  const handleAddSavedMovies = card => {\n    addSavedMovies(card);\n  };\n  const addSavedMovies = card => {\n    mainApi.addMovie(card).then(data => {\n      setSavedMovies([...savedMovies, data]);\n      setFilteredSavedMovies([...savedMovies, data]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // Удаление из избранного\n  const handlerRemoveSavedMovies = card => {\n    savedMovies.forEach(i => {\n      if (i.movieId === card.id) {\n        removeSavedMovies(i);\n      }\n    });\n  };\n\n  //  Удаление из избранного  //\n  const removeSavedMovies = card => {\n    mainApi.removeMovie(card._id).then(() => {\n      setSavedMovies(savedMovies.filter(i => i.movieId !== card.movieId));\n      setFilteredSavedMovies(savedMovies.filter(i => i.movieId !== card.movieId));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  //  Обработка избранного - проверка наличия закладки  //\n  const handleBookmark = card => {\n    if (!onCheckBookmark(card)) {\n      handleAddSavedMovies(card);\n    } else {\n      handlerRemoveSavedMovies(card);\n    }\n  };\n  const onCheckBookmark = card => {\n    return savedMovies.some(i => i.movieId === card.id);\n  };\n  //  Поиск по фильмам  //\n  const searchMovie = searchText => {\n    const allMoviesPage = location.pathname === '/movies';\n    const savedMoviesPage = location.pathname === '/saved-movies';\n    const movies = allMoviesPage ? allMovies : savedMovies;\n    setIsLoading(true);\n    setRequestSearchError({\n      isRequestError: false,\n      messageRequestError: ''\n    });\n    const filter = movies.filter(i => i.nameRU.toLowerCase().includes(searchText.toLowerCase()));\n    if (savedMoviesPage) {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: ''\n      });\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово'\n        });\n        // return;\n      }\n\n      setFilteredSavedMovies(filter);\n    }\n    if (allMoviesPage) {\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово'\n        });\n        localStorage.removeItem('searchMovies');\n        setFilteredMovies([]);\n        setIsLoading(false);\n        return;\n      }\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: ''\n      });\n      setFilteredMovies(filter);\n      localStorage.setItem('searchMovies', JSON.stringify(filter));\n    }\n    if (filter.length === 0) {\n      setRequestSearchError({\n        isRequestError: true,\n        messageRequestError: 'Ничего не найдено'\n      });\n      setIsLoading(false);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          component: Movies,\n          exact: true,\n          path: \"/movies\",\n          loggedIn: loggedIn,\n          isLoading: isLoading,\n          movies: filteredMovies,\n          searchMovie: searchMovie,\n          onBookmark: handleBookmark,\n          onCheckBookmark: onCheckBookmark,\n          setRequestSearchError: setRequestSearchError,\n          requestSearchError: requestSearchError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          component: SavedMovies,\n          exact: true,\n          path: \"/saved-movies\",\n          loggedIn: loggedIn,\n          isLoading: isLoading,\n          movies: filteredSavedMovies,\n          searchMovie: searchMovie,\n          removeSavedMovies: removeSavedMovies,\n          setRequestSearchError: setRequestSearchError,\n          requestSearchError: requestSearchError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          component: Profile,\n          exact: true,\n          path: \"/profile\",\n          loggedIn: loggedIn,\n          onSignOut: handleSignOut,\n          onUpdateProfile: handleUpdateProfile,\n          requestEditProfileError: requestEditProfileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            onSignIn: handleSignIn,\n            requestSignInError: requestSignInError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Register, {\n            onSignUp: handleSignUp,\n            requestSignUpError: requestSignUpError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IW+rZm1jx+7O+XgKCKu7UD6Wqd4=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Redirect","Route","Switch","useHistory","useLocation","ProtectedRoute","Header","Main","NotFound","Movies","Register","Login","Profile","SavedMovies","Footer","auth","mainApi","moviesApi","CurrentUserContext","App","history","location","loggedIn","setloggedIn","currentUser","setCurrentUser","name","email","isLoading","setIsLoading","requestSignUpError","setRequestSignUpError","isRequestError","messageRequestError","requestSignInError","setRequestSignInError","requestEditProfileError","setRequestEditProfileError","allMovies","setAllMovies","filteredMovies","setFilteredMovies","savedMovies","setSavedMovies","filteredSavedMovies","setFilteredSavedMovies","requestSearchError","setRequestSearchError","handleSignIn","data","signInApi","then","res","token","localStorage","setItem","handleTokenCheck","push","catch","err","console","log","statusCode","message","getItem","authApi","setToken","pathname","handleSignOut","handleSignUp","signUpApi","clear","handleUpdateProfile","editProfileApi","getAllMovies","getSavedMovies","JSON","parse","length","stringify","handleAddSavedMovies","card","addSavedMovies","addMovie","handlerRemoveSavedMovies","forEach","i","movieId","id","removeSavedMovies","removeMovie","_id","filter","handleBookmark","onCheckBookmark","some","searchMovie","searchText","allMoviesPage","savedMoviesPage","movies","nameRU","toLowerCase","includes","removeItem"],"sources":["/Users/kirillchistov/Projects/movies-explorer-frontend/src/components/App/App.jsx"],"sourcesContent":["//  App — корневой компонент приложения, его создаёт CRA  //\n//  Импорт библиотек  //\nimport React, { useEffect, useState } from 'react';\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\n\n//  Импорт всех компонентов  //\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport NotFound from '../NotFound/NotFound';\nimport Movies from '../Movies/Movies';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Footer from '../Footer/Footer';\nimport auth from '../../utils/auth';\nimport mainApi from '../../utils/MainApi.js';\nimport moviesApi from '../../utils/MoviesApi';\n//  Импорт контекста пользователя  //\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n//  Импорт локальных стилей  //\nimport './App.css';\n\n//  Компонент приложения с хуками, состояниями и эффектами жизненного цикла  //\n//  Стейты авторизации, прелоудера, ошибок, стартового набора фильмов, поиска и т.д.  //\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n  \n  const [loggedIn, setloggedIn] = useState(false);\n  \n  const [currentUser, setCurrentUser] = useState({\n    name: 'Kirill',\n    email: 'kirill.v.chistov@yandex.ru',\n  });\n  \n  const [isLoading, setIsLoading] = useState(true);\n  \n  const [requestSignUpError, setRequestSignUpError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  const [requestSignInError, setRequestSignInError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  const [requestEditProfileError, setRequestEditProfileError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n  \n  const [allMovies, setAllMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [filteredSavedMovies, setFilteredSavedMovies] = useState([]);\n\n  const [requestSearchError, setRequestSearchError] = useState({\n    isRequestError: false,\n    messageRequestError: '',\n  });\n\n  //  Обработчик логина  //\n  const handleSignIn = (data) => {\n    auth\n      .signInApi(data)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          handleTokenCheck();\n          history.push('/movies');\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка авторизации');\n        console.log(err);\n        if (err.statusCode === 400) {\n          err.message = 'Вы ввели неправильный логин или пароль';\n        }\n        setRequestSignInError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  // Обработчик проверки токена  //\n  const handleTokenCheck = () => {\n    // console.log('check');\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth\n        .authApi(token)\n        .then((res) => {\n          if (res) {\n            setloggedIn(true);\n            setCurrentUser({ name: res.name, email: res.email });\n            mainApi.setToken(token);\n            history.push(location.pathname);\n          }\n        })\n        .catch((err) => {\n          console.log(`Возникла ошибка. ${err}`);\n          console.log(err);\n          if (err.statusCode === 401) {\n            handleSignOut();\n          }\n        });\n      // return;\n    }\n    // handleSignOut();\n  }\n\n  //  Обработчик регистрации  //\n  const handleSignUp = (data) => {\n    auth\n      .signUpApi(data)\n      .then((res) => {\n        if (res) {\n          handleSignIn(data);\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка регистрации');\n        setRequestSignUpError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  //  Обработчик выхода из аккаунта  //\n  const handleSignOut = () => {\n    localStorage.clear();\n    setloggedIn(false);\n    setAllMovies([]);\n    setSavedMovies([]);\n    setFilteredMovies([]);\n    setFilteredSavedMovies([]);\n    setCurrentUser({\n      name: '',\n      email: '',\n    });\n    history.push('/');\n  }\n\n  //  Обработчик редактирования профиля  //\n  const handleUpdateProfile= (data) => {\n    mainApi\n      .editProfileApi(data)\n      .then((res) => {\n        if (res) {\n          setCurrentUser({ name: res.name, email: res.email });\n          setRequestEditProfileError({\n            isRequestError: true,\n            messageRequestError: 'Данные обновлены',\n          });\n        }\n      })\n      .catch((err) => {\n        console.log('Ошибка обновления профиля');\n        setRequestEditProfileError({\n          isRequestError: true,\n          messageRequestError: err.message,\n        });\n      });\n  }\n\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  //  Хук поиска по фильмам  //\n  useEffect(() => {\n    setRequestSearchError({\n      isRequestError: false,\n      messageRequestError: '',\n    });  \n    if (loggedIn) {\n      // localStorage.setItem('shortMovie', false);\n      // localStorage.setItem('searchText', '');\n      getAllMovies();\n      getSavedMovies();\n      if (localStorage.getItem('searchMovies')) {\n        setFilteredMovies(JSON.parse(localStorage.getItem('searchMovies')));\n        if (JSON.parse(localStorage.getItem('searchMovies')).length === 0) {\n          setRequestSearchError({\n            isRequestError: true,\n            messageRequestError: 'Ничего не найдено',\n          });\n        }\n        setIsLoading(false);\n      }\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    if (location.pathname === '/movies') {\n      if (!localStorage.getItem('searchMovies')) {\n        setRequestSearchError({\n          isRequestError: false,\n          messageRequestError: '',\n        });\n      }\n    }\n    if (location.pathname === '/saved-movies') {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });  \n      setFilteredSavedMovies(savedMovies);\n    }\n  }, [location, savedMovies]);\n\n  //  Получение коллекции всех фильмов  //\n  const getAllMovies = () => {\n    if (localStorage.getItem('allMovies')) {\n      setAllMovies(JSON.parse(localStorage.getItem('allMovies')));\n    } else {\n      moviesApi\n        .getAllMovies()\n        .then((data) => {\n          localStorage.setItem('allMovies', JSON.stringify(data));\n          setAllMovies(data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setRequestSearchError({\n            isRequestError: true,\n            messageRequestError:\n              'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз',\n          });\n        });\n    }\n  }\n\n  //  Получение сохраненных фильмов  //\n  const getSavedMovies = () => {\n    mainApi\n      .getSavedMovies()\n      .then((data) => {\n        setSavedMovies(data);\n        setFilteredSavedMovies(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Обработчик сохранения избранных фильмов  //\n  const handleAddSavedMovies = (card) => {\n    addSavedMovies(card);\n  }\n\n  const addSavedMovies = (card) => {\n    mainApi\n      .addMovie(card)\n      .then((data) => {\n        setSavedMovies([...savedMovies, data]);\n        setFilteredSavedMovies([...savedMovies, data]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Удаление из избранного\n  const handlerRemoveSavedMovies = (card) => {\n    savedMovies.forEach((i) => {\n      if (i.movieId === card.id) {\n        removeSavedMovies(i);\n      }\n    });\n  }\n\n  //  Удаление из избранного  //\n  const removeSavedMovies = (card) => {\n    mainApi\n      .removeMovie(card._id)\n      .then(() => {\n        setSavedMovies(savedMovies.filter((i) => i.movieId !== card.movieId));\n        setFilteredSavedMovies(\n          savedMovies.filter((i) => i.movieId !== card.movieId),\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Обработка избранного - проверка наличия закладки  //\n  const handleBookmark = (card) => {\n    if (!onCheckBookmark(card)) {\n      handleAddSavedMovies(card);\n    } else {\n      handlerRemoveSavedMovies(card);\n    }\n  }\n\n  const onCheckBookmark = (card) => {\n    return savedMovies.some((i) => i.movieId === card.id);\n  }\n  //  Поиск по фильмам  //\n  const searchMovie = (searchText) => {\n    const allMoviesPage = location.pathname === '/movies';\n    const savedMoviesPage = location.pathname === '/saved-movies';\n    const movies = allMoviesPage ? allMovies : savedMovies;\n\n    setIsLoading(true);\n    setRequestSearchError({ isRequestError: false, messageRequestError: '' });\n\n    const filter = movies.filter((i) =>\n      i.nameRU.toLowerCase().includes(searchText.toLowerCase()),\n    );\n\n    if (savedMoviesPage) {\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово',\n        });\n        // return;\n      }\n      setFilteredSavedMovies(filter);\n    }\n\n    if (allMoviesPage) {\n      if (!searchText) {\n        setRequestSearchError({\n          isRequestError: true,\n          messageRequestError: 'Введите ключевое слово',\n        });\n        localStorage.removeItem('searchMovies');\n        setFilteredMovies([]);\n        setIsLoading(false);\n        return;\n      }\n      setRequestSearchError({\n        isRequestError: false,\n        messageRequestError: '',\n      });\n      setFilteredMovies(filter);\n      localStorage.setItem('searchMovies', JSON.stringify(filter));\n    }\n\n    if (filter.length === 0) {\n      setRequestSearchError({\n        isRequestError: true,\n        messageRequestError: 'Ничего не найдено',\n      });\n      setIsLoading(false);\n    }\n\n    setIsLoading(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <Switch>\n          <Route exact path='/'>\n            <Header loggedIn={loggedIn} />\n            <Main loggedIn={loggedIn} />\n            <Footer />\n          </Route>\n\n          <ProtectedRoute\n            component={Movies}\n            exact path='/movies'\n            loggedIn={loggedIn}\n            isLoading={isLoading}\n            movies={filteredMovies}\n            searchMovie={searchMovie}\n            onBookmark={handleBookmark}\n            onCheckBookmark={onCheckBookmark}\n            setRequestSearchError={setRequestSearchError}\n            requestSearchError={requestSearchError}\n          />\n\n          <ProtectedRoute\n            component={SavedMovies}\n            exact\n            path='/saved-movies'\n            loggedIn={loggedIn}\n            isLoading={isLoading}\n            movies={filteredSavedMovies}\n            searchMovie={searchMovie}\n            removeSavedMovies={removeSavedMovies}\n            setRequestSearchError={setRequestSearchError}\n            requestSearchError={requestSearchError}\n          />\n\n          <ProtectedRoute\n            component={Profile}\n            exact\n            path='/profile'\n            loggedIn={loggedIn}\n            onSignOut={handleSignOut}\n            onUpdateProfile={handleUpdateProfile}\n            requestEditProfileError={requestEditProfileError}\n          />\n\n          <Route path='/signin'>\n            {loggedIn ? (\n              <Redirect to='/movies' />\n            ) : (\n              <Login\n                onSignIn={handleSignIn}\n                requestSignInError={requestSignInError}\n              />\n            )}\n          </Route>\n\n          <Route path='/signup'>\n            {loggedIn ? (\n              <Redirect to='/movies' />\n            ) : (\n              <Register\n                onSignUp={handleSignUp}\n                requestSignUpError={requestSignUpError}\n              />\n            )}\n          </Route>\n\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}